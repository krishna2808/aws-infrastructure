digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" [label = "module.ec2_instance.aws_instance.public_instance_tf", shape = "box"]
		"[root] module.key_pair.aws_key_pair.key_pair_tf (expand)" [label = "module.key_pair.aws_key_pair.key_pair_tf", shape = "box"]
		"[root] module.key_pair.local_file.private_key (expand)" [label = "module.key_pair.local_file.private_key", shape = "box"]
		"[root] module.key_pair.null_resource.set_permissions (expand)" [label = "module.key_pair.null_resource.set_permissions", shape = "box"]
		"[root] module.key_pair.tls_private_key.key_pair_public_private (expand)" [label = "module.key_pair.tls_private_key.key_pair_public_private", shape = "box"]
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" [label = "module.security_group.aws_security_group.security_group_tf", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.gw (expand)" [label = "module.vpc.aws_internet_gateway.gw", shape = "box"]
		"[root] module.vpc.aws_route.route_association_internet_gateway (expand)" [label = "module.vpc.aws_route.route_association_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route_table.public_route_table (expand)" [label = "module.vpc.aws_route_table.public_route_table", shape = "box"]
		"[root] module.vpc.aws_route_table_association.public_route_public_subnet (expand)" [label = "module.vpc.aws_route_table_association.public_route_public_subnet", shape = "box"]
		"[root] module.vpc.aws_subnet.public_subnet (expand)" [label = "module.vpc.aws_subnet.public_subnet", shape = "box"]
		"[root] module.vpc.aws_vpc.custom_vpc_tf (expand)" [label = "module.vpc.aws_vpc.custom_vpc_tf", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/local\"]" [label = "provider[\"registry.terraform.io/hashicorp/local\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/null\"]" [label = "provider[\"registry.terraform.io/hashicorp/null\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"]" [label = "provider[\"registry.terraform.io/hashicorp/tls\"]", shape = "diamond"]
		"[root] var.AWS_ACCESS_KEY" [label = "var.AWS_ACCESS_KEY", shape = "note"]
		"[root] var.AWS_SECRETE_KEY" [label = "var.AWS_SECRETE_KEY", shape = "note"]
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.instance_username (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.public_ip (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.ami_number (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.instance_name (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.instance_type (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.key_name (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.private_key (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.security_group_ids (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.subnet_id (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.type (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.user_data (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.username (expand)"
		"[root] module.ec2_instance.aws_instance.public_instance_tf (expand)" -> "[root] module.ec2_instance.var.volume_size (expand)"
		"[root] module.ec2_instance.output.instance_username (expand)" -> "[root] module.ec2_instance.var.username (expand)"
		"[root] module.ec2_instance.output.public_ip (expand)" -> "[root] module.ec2_instance.aws_instance.public_instance_tf (expand)"
		"[root] module.ec2_instance.var.ami_number (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.instance_name (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.instance_type (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.key_name (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.key_name (expand)" -> "[root] module.key_pair.output.key_name (expand)"
		"[root] module.ec2_instance.var.private_key (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.private_key (expand)" -> "[root] module.key_pair.output.generated_private_key (expand)"
		"[root] module.ec2_instance.var.security_group_ids (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.security_group_ids (expand)" -> "[root] module.security_group.output.security_group_id (expand)"
		"[root] module.ec2_instance.var.subnet_id (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.subnet_id (expand)" -> "[root] module.vpc.output.subnet_id (expand)"
		"[root] module.ec2_instance.var.type (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.user_data (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.username (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.volume_size (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.key_pair (close)" -> "[root] module.key_pair.null_resource.set_permissions (expand)"
		"[root] module.key_pair (close)" -> "[root] module.key_pair.output.filename (expand)"
		"[root] module.key_pair (close)" -> "[root] module.key_pair.output.generated_private_key (expand)"
		"[root] module.key_pair (close)" -> "[root] module.key_pair.output.key_name (expand)"
		"[root] module.key_pair.aws_key_pair.key_pair_tf (expand)" -> "[root] module.key_pair.tls_private_key.key_pair_public_private (expand)"
		"[root] module.key_pair.aws_key_pair.key_pair_tf (expand)" -> "[root] module.key_pair.var.key_name (expand)"
		"[root] module.key_pair.aws_key_pair.key_pair_tf (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.key_pair.local_file.private_key (expand)" -> "[root] module.key_pair.tls_private_key.key_pair_public_private (expand)"
		"[root] module.key_pair.local_file.private_key (expand)" -> "[root] module.key_pair.var.filename (expand)"
		"[root] module.key_pair.local_file.private_key (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.key_pair.null_resource.set_permissions (expand)" -> "[root] module.key_pair.local_file.private_key (expand)"
		"[root] module.key_pair.null_resource.set_permissions (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.key_pair.output.filename (expand)" -> "[root] module.key_pair.local_file.private_key (expand)"
		"[root] module.key_pair.output.generated_private_key (expand)" -> "[root] module.key_pair.tls_private_key.key_pair_public_private (expand)"
		"[root] module.key_pair.output.key_name (expand)" -> "[root] module.key_pair.aws_key_pair.key_pair_tf (expand)"
		"[root] module.key_pair.tls_private_key.key_pair_public_private (expand)" -> "[root] module.key_pair.var.algorithm (expand)"
		"[root] module.key_pair.tls_private_key.key_pair_public_private (expand)" -> "[root] module.key_pair.var.rsa_bits (expand)"
		"[root] module.key_pair.tls_private_key.key_pair_public_private (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"]"
		"[root] module.key_pair.var.algorithm (expand)" -> "[root] module.key_pair (expand)"
		"[root] module.key_pair.var.filename (expand)" -> "[root] module.key_pair (expand)"
		"[root] module.key_pair.var.key_name (expand)" -> "[root] module.key_pair (expand)"
		"[root] module.key_pair.var.rsa_bits (expand)" -> "[root] module.key_pair (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.output.egress_rules (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.output.ingress_rules (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.output.security_group_id (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.output.security_group_name (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.var.egress_to_port (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.var.ingress_to_port_custom_tcp (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.var.ingress_to_port_http (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.var.ingress_to_port_https (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.allow_all_traffic_outbound_description (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.custom_tcp_description (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.egress_cidr_blocks (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.egress_from_port (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.egress_protocol (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.http_description (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.https_description (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.ingress_cidr_blocks (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.ingress_from_port_custom_tcp (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.ingress_from_port_http (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.ingress_from_port_https (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.ingress_from_port_ssh (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.ingress_protocol (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.ingress_to_port_ssh (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.sg_description (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.sg_name (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.ssh_description (expand)"
		"[root] module.security_group.aws_security_group.security_group_tf (expand)" -> "[root] module.security_group.var.vpc_id (expand)"
		"[root] module.security_group.output.egress_rules (expand)" -> "[root] module.security_group.aws_security_group.security_group_tf (expand)"
		"[root] module.security_group.output.ingress_rules (expand)" -> "[root] module.security_group.aws_security_group.security_group_tf (expand)"
		"[root] module.security_group.output.security_group_id (expand)" -> "[root] module.security_group.aws_security_group.security_group_tf (expand)"
		"[root] module.security_group.output.security_group_name (expand)" -> "[root] module.security_group.aws_security_group.security_group_tf (expand)"
		"[root] module.security_group.var.allow_all_traffic_outbound_description (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.custom_tcp_description (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.egress_cidr_blocks (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.egress_from_port (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.egress_protocol (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.egress_to_port (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.http_description (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.https_description (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_cidr_blocks (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_from_port_custom_tcp (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_from_port_http (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_from_port_https (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_from_port_ssh (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_protocol (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_to_port_custom_tcp (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_to_port_http (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_to_port_https (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ingress_to_port_ssh (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.sg_description (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.sg_name (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.ssh_description (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.vpc_id (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route.route_association_internet_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route_table_association.public_route_public_subnet (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.subnet_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc.aws_internet_gateway.gw (expand)" -> "[root] module.vpc.aws_vpc.custom_vpc_tf (expand)"
		"[root] module.vpc.aws_internet_gateway.gw (expand)" -> "[root] module.vpc.var.aws_internet_gateway_name (expand)"
		"[root] module.vpc.aws_route.route_association_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.gw (expand)"
		"[root] module.vpc.aws_route.route_association_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.public_route_table (expand)"
		"[root] module.vpc.aws_route_table.public_route_table (expand)" -> "[root] module.vpc.aws_vpc.custom_vpc_tf (expand)"
		"[root] module.vpc.aws_route_table.public_route_table (expand)" -> "[root] module.vpc.var.public_route_name (expand)"
		"[root] module.vpc.aws_route_table_association.public_route_public_subnet (expand)" -> "[root] module.vpc.aws_route_table.public_route_table (expand)"
		"[root] module.vpc.aws_route_table_association.public_route_public_subnet (expand)" -> "[root] module.vpc.aws_subnet.public_subnet (expand)"
		"[root] module.vpc.aws_subnet.public_subnet (expand)" -> "[root] module.vpc.aws_vpc.custom_vpc_tf (expand)"
		"[root] module.vpc.aws_subnet.public_subnet (expand)" -> "[root] module.vpc.var.public_availability_zone (expand)"
		"[root] module.vpc.aws_subnet.public_subnet (expand)" -> "[root] module.vpc.var.public_subnet_name (expand)"
		"[root] module.vpc.aws_subnet.public_subnet (expand)" -> "[root] module.vpc.var.subnet_cidr_block_public (expand)"
		"[root] module.vpc.aws_vpc.custom_vpc_tf (expand)" -> "[root] module.vpc.var.cidr_block (expand)"
		"[root] module.vpc.aws_vpc.custom_vpc_tf (expand)" -> "[root] module.vpc.var.vpc_name (expand)"
		"[root] module.vpc.aws_vpc.custom_vpc_tf (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.output.igw_id (expand)" -> "[root] module.vpc.aws_internet_gateway.gw (expand)"
		"[root] module.vpc.output.subnet_id (expand)" -> "[root] module.vpc.aws_subnet.public_subnet (expand)"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.custom_vpc_tf (expand)"
		"[root] module.vpc.var.aws_internet_gateway_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.cidr_block (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_availability_zone (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_route_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.subnet_cidr_block_public (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_name (expand)" -> "[root] module.vpc (expand)"
		"[root] output.ssh_command (expand)" -> "[root] module.ec2_instance.output.instance_username (expand)"
		"[root] output.ssh_command (expand)" -> "[root] module.ec2_instance.output.public_ip (expand)"
		"[root] output.ssh_command (expand)" -> "[root] module.key_pair.output.filename (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.ec2_instance.aws_instance.public_instance_tf (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.route_association_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.public_route_public_subnet (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.AWS_ACCESS_KEY"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.AWS_SECRETE_KEY"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.key_pair.local_file.private_key (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.key_pair.null_resource.set_permissions (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)" -> "[root] module.key_pair.tls_private_key.key_pair_public_private (expand)"
		"[root] root" -> "[root] module.ec2_instance (close)"
		"[root] root" -> "[root] module.key_pair (close)"
		"[root] root" -> "[root] module.security_group (close)"
		"[root] root" -> "[root] module.vpc (close)"
		"[root] root" -> "[root] output.ssh_command (expand)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)"
	}
}

